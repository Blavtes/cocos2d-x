diff --git a/cocos2dx/platform/android/CCImage.cpp b/cocos2dx/platform/android/CCImage.cpp
index 85ef335..bfd2260 100644
--- a/cocos2dx/platform/android/CCImage.cpp
+++ b/cocos2dx/platform/android/CCImage.cpp
@@ -87,7 +87,7 @@ public:
                return false;
            }
         
-        
+    
         
            // Do a full lookup for the font path using CCFileUtils in case the given font name is a relative path to a font file asset,
            // or the path has been mapped to a different location in the app package:
diff --git a/cocos2dx/platform/android/java/project.properties b/cocos2dx/platform/android/java/project.properties
index cd0ca12..b2ed0b0 100644
--- a/cocos2dx/platform/android/java/project.properties
+++ b/cocos2dx/platform/android/java/project.properties
@@ -12,4 +12,4 @@
 
 android.library=true
 # Project target.
-target=android-8
+target=android-16
diff --git a/cocos2dx/sprite_nodes/CCSprite.cpp b/cocos2dx/sprite_nodes/CCSprite.cpp
index baab01d..43b1d0f 100644
--- a/cocos2dx/sprite_nodes/CCSprite.cpp
+++ b/cocos2dx/sprite_nodes/CCSprite.cpp
@@ -240,11 +240,12 @@ bool CCSprite::initWithFile(const char *pszFilename, const CCRect& rect)
     CCAssert(pszFilename != NULL, "");
 
     CCTexture2D *pTexture = CCTextureCache::sharedTextureCache()->addImage(pszFilename);
+    CCLOG("CCSprite::initWithFile ...creat..");
     if (pTexture)
     {
         return initWithTexture(pTexture, rect);
     }
-
+    CCLOG("CCSprite::initWithFile creat filed !!");
     // don't release here.
     // when load texture failed, it's better to get a "transparent" sprite then a crashed program
     // this->release(); 
diff --git a/cocos2dx/textures/CCTextureCache.cpp b/cocos2dx/textures/CCTextureCache.cpp
index 6e0d3f9..3e394c5 100644
--- a/cocos2dx/textures/CCTextureCache.cpp
+++ b/cocos2dx/textures/CCTextureCache.cpp
@@ -477,7 +477,8 @@ CCTexture2D * CCTextureCache::addImage(const char * path)
     }
 
     CC_SAFE_RELEASE(pImage);
-
+    CCLOG("cocos2d:  create texture f");
+  CCLOG("cocos2d:  create texture for file:%s ", path);
     //pthread_mutex_unlock(m_pDictLock);
     return texture;
 }
diff --git a/extensions/CocoStudio/GUI/UIWidgets/UIImageView.cpp b/extensions/CocoStudio/GUI/UIWidgets/UIImageView.cpp
index 38507fb..e322d5f 100644
--- a/extensions/CocoStudio/GUI/UIWidgets/UIImageView.cpp
+++ b/extensions/CocoStudio/GUI/UIWidgets/UIImageView.cpp
@@ -70,7 +70,15 @@ void UIImageView::initRenderer()
     m_pImageRenderer = CCSprite::create();
     m_pRenderer->addChild(m_pImageRenderer);
 }
-
+void UIImageView::loadTexture2D( cocos2d::CCTexture2D *texture){
+    
+    DYNAMIC_CAST_CCSPRITE->initWithTexture(texture);
+    DYNAMIC_CAST_CCSPRITE->setColor(getColor());
+    DYNAMIC_CAST_CCSPRITE->setOpacity(getOpacity());
+    m_imageTextureSize = m_pImageRenderer->getContentSize();
+    updateAnchorPoint();
+    imageTextureScaleChangedWithSize();
+}
 void UIImageView::loadTexture(const char *fileName, TextureResType texType)
 {
     if (!fileName || strcmp(fileName, "") == 0)
diff --git a/extensions/CocoStudio/GUI/UIWidgets/UIImageView.h b/extensions/CocoStudio/GUI/UIWidgets/UIImageView.h
index 3d85eb1..50e66b9 100644
--- a/extensions/CocoStudio/GUI/UIWidgets/UIImageView.h
+++ b/extensions/CocoStudio/GUI/UIWidgets/UIImageView.h
@@ -58,7 +58,7 @@ public:
      * @param texType    @see UI_TEX_TYPE_LOCAL
      */
     void loadTexture(const char* fileName,TextureResType texType = UI_TEX_TYPE_LOCAL);
-    
+    void loadTexture2D( CCTexture2D *texture);
     /**
      * Updates the texture rect of the UIImageView in points.
      * It will call setTextureRect:rotated:untrimmedSize with rotated = NO, and utrimmedSize = rect.size.
diff --git a/extensions/network/HttpClient.h b/extensions/network/HttpClient.h
index 9470517..1cfb7b7 100644
--- a/extensions/network/HttpClient.h
+++ b/extensions/network/HttpClient.h
@@ -92,7 +92,7 @@ public:
      */
     inline int getTimeoutForRead() {return _timeoutForRead;};
         
-private:
+//private:
     CCHttpClient();
     virtual ~CCHttpClient();
     bool init(void);
